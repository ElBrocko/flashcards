###Question: generate one number from binomail distribution where chance of each outcome is 1/2

Answer: np.random.binomial(1, 0.5)

Note:

###Question: Suppose we want to simulate the probability of flipping a fair coin 20 times, and getting a number greater than or equal to 15. do 10000 simulations of flipping a fair coin 20 times, thn see what proportion of the simulations are 15 or greater.

Answer:x = np.random.binomial(20, .5, 10000)
print((x>=15).mean())

Note: x
array([ 9,  8, 12, ..., 10, 13,  9])

###Question: calculate the probability of two tornado events occuring two days in a row over a period of one million days, vars include chance_of_tornado, tornado_events, two_days_in_a_row

***
print('{} tornadoes back to back in {} years'.format(two_days_in_a_row, 1000000/365))

Answer: chance_of_tornado = 0.01

tornado_events = np.random.binomial(1, chance_of_tornado, 1000000)
    
two_days_in_a_row = 0
for j in range(1,len(tornado_events)-1):
    if tornado_events[j]==1 and tornado_events[j-1]==1:
        two_days_in_a_row+=1

print('{} tornadoes back to back in {} years'.format(two_days_in_a_row, 1000000/365))

Note:

###Question: count the missing values in each column of the drinks df

Answer: drinks.isnull().sum()

Note:

###Question: for the drinks df
# drop a row if ANY values are missing
# drop a row only if ALL values are missing

Answer: drinks.dropna() 
drinks.dropna(how='all')

Note:

###Question: # for drinks df groupyby continent and fill in missing values with 'NA'

Answer: drinks.continent.fillna(value='NA', inplace=True)   

Note:

###Question:  # for each continent in the drinks df, calculate the mean beer servings

Answer: drinks.groupby('continent').beer.mean()

Note:

###Question: # for each continent in the drinks df, describe beer servings

Answer: drinks.groupby('continent').beer.describe()

Note:

###Question:  #gorup drinks df by continent and return df showing count mean and min of the beer column
#gorup drinks df by continent and return df showing count mean and min and max of the beer column and sort by mean

Answer: drinks.groupby('continent').beer.agg(['count', 'mean', 'min', 'max'])
drinks.groupby('continent').beer.agg(['count', 'mean', 'min', 'max']).sort('mean')
 

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

###Question: 

Answer:

Note:

